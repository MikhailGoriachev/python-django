# кортежи в Python


# демонстрация использования кортежей (списков переменных)
def demo_tuples():
    # присваивание кортежу начальных значений
    x, y = 1, 2

    # кортеж - список переменных, пример обмена переменных
    # значениями в кортежах
    print(f'x = {x}, y = {y}')
    x, y = y, x
    print(f'x = {x}, y = {y}')

    # применим кортеж еще раз, для присваивания начальных значений
    a1, b1 = 5, 8

    # применяем кортеж, возвращенный из функции
    s1, p1 = rectangle_sp(a1, b1)
    print(f'\nВ прямоугольнике {a1} x {b1} площадь {s1} и периметр {p1}')

    # создание и вывод кортежа
    x = (12, 'Пример строки', True, -1)
    print(f'\nКортеж: {x}')

    # еще создание и вывод кортежа
    x = (a1, b1, s1, p1)
    print(f'\nКортеж: {x}')

    print("------------------------------------------------------")

    # перебор элементов кортежа
    for item in x:
        print(item)

    print()

    # перебор элементов кортежа
    for z in ('Лев', 'Толстой', True, 45):
        print(z)
    print("------------------------------------------------------\n")

    # кортеж кортежей
    x = (
        (10, 'Иванов Р.О.',     12_000, 'инженер'),
        (11, 'Павловская Т.А.', 23_000, 'преподаватель'),
        (14, 'Свиридов А.В.',   19_000, 'администратор', True),
        (12, 'Аникеева О.Р.',   15_000, 'программист', 12, False),
        (17, 'Михайлов Б.У.',   21_000, 'администратор')
    )

    print('\n\tСотрудники предприятия')
    # перебор элементов этого кортежа кортежей
    for datum in x:
        # перебор полей очередного вложенного кортежа
        for item in datum:
            print(f'{item}  ', end='')
        print()
# end demoTuples


# возврат из функции нескольких значений в кортеже
def rectangle_sp(a, b):
    s = a * b
    p = 2 * (a + b)
    return s, p  # возвращаем кортеж !
# end rectangle_sp


# Дополнительные сведения о кортежах

# итерация по элементам кортежа
def iterate_tuples():
    # Перебор элементов кортежей - при помощи циклов for, while
    user = ("Василий Романов", 22, False, "Донецк")

    print("\nПеребор полей кортежа циклом for in:")
    for item in user:
        print(item, end=' ')
    # end for
    print()

    print("\nПеребор полей кортежа циклом while и индексом поля:")
    i = 0
    while i < len(user):
        print(user[i], end = ' ')
        i += 1
    # end while
    print()

    print("\nПеребор полей кортежа циклом for и индексом поля:")
    for i in range(0, len(user)):
        print(user[i], end = ' ')
    # end for
    print()

    # вывод всех полей кортежа при помощи переменных
    name, age, marriage, city = user
    print('\nВывод полей кортежа при помощи переменных:\n'
          f'{name} {age} {marriage} {city}')

    # кортеж кортежей
    x = (
        (10, 'Иванов Р.О.',     12_000, 'инженер'),
        (11, 'Павловская Т.А.', 23_000, 'преподаватель'),
        (14, 'Свиридов А.В.',   19_000, 'администратор'),
        (12, 'Аникеева О.Р.',   15_000, 'программист'),
        (17, 'Михайлов Б.У.',   21_000, 'администратор')
    )

    print('\n\tСотрудники предприятия')
    # перебор элементов этого кортежа кортежей
    for datum in x:
        id, fullname, salary, position = datum
        print(f'{id} {fullname}  {salary}  {position}')
    print()
# end iterate_tuples


# проверка наличия элемента в кортеже - оператор in
def find_item():
    user = ("Ольга Михайлова", 23, True, "Моспино")
    city = "Моспино"    # ключ поиска - что ищем

    # in - проверка наличия значения city в кортеже user
    if city in user:
        print(f"Пользователь живет в \033[1mг. {city}\033[0m")
    else:
        print(f"Пользователь живет не в г. \033[1m{city}\033[0m")
    # end if
# end find_item


# Сложный кортеж - кортеж может содержать другие кортежи в виде элементов
def complex_tuples():
    countries = (
        # страна, население, ((город1, население_города1), (город2, население_города2), ... )
        ("Германия", 83.019, (("Берлин", 4.088), ("Гамбург", 1.841))),
        ("Франция", 67.848, (("Париж", 10.62), ("Марсель", 0.87))),
        ("Россия", 146.171, (("Москва", 17.2), ("Орел", 0.308), ("Владивосток", 0.598)))
    ) # countries

    # перебираем сложный кортеж
    habitants = 0
    for country in countries:
        # записать в переменные поля кортежа
        country_name, country_population, cities = country

        habitants += country_population

        print(f"\nСтрана: {country_name},  население: {country_population}")
        for city in cities:
            # записать в переменные поля кортежа
            city_name, city_population = city
            print(f"\tГород: {city_name},  население: {city_population}")
        # end for
    # end for

    print(f'----------------------------------------------------\n'
          f'Всего учтено {habitants} чел.')
# end complex_tuples
