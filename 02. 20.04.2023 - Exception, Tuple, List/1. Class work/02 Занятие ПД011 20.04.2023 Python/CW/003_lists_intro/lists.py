# Списки - это то же, что и динамические массивы
# в других языках программирования
from utils import show_list, fill_list


def demo_lists():
    # создание списков, -2 повторяем 3 раза, (-2*3) а это -6
    list1 = [1, 6, -1, 9, 22, -2*3, (-2*3)]
    list2 = list(list1)

    # список (массив), созданный из range() нельзя изменять
    # list3 = range(1, 11)   # 1, 2, ..., 10
    list3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    print(f'\nВыводим список средствами Python: {list3}')

    # выводим список собственной функцией
    show_list(list1, "Список list1: ")
    show_list(list2, "Список list2: ")
    show_list(list3, "Список list3: ")

    fill_list(list1, -10, 10)
    show_list(list1, "list1 заполнен новыми значениями: ")


    # методы списков
    list1.append(100)
    show_list(list1, "\nДобавлен элемент в конец list1 : ")

    # вставка 111 перед элементом с индексом 1
    list1.insert(1, 111)
    show_list(list1, "\nДобавлен элемент в  list1 : ")
    list1.insert(1, 111)
    show_list(list1, "\nДобавлен элемент в  list1 : ")
    list1.insert(1, 111)
    show_list(list1, "\nДобавлен элемент в  list1 : ")

    # удаление одного элемента со значением 111 из списка
    list1.remove(111)
    show_list(list1, "\nУдален первый элемент со значением 111 из  list1 : ")

    # удаление всех элементов со значением 111 из списка
    # !!! list.count(элемент) - количество вхождений элементов в список
    for i in range(0, list1.count(111)):
        list1.remove(111)
    show_list(list1, "\nУдалены все элементы со значением 111 из  list1 : ")

    # удаление последнего элемента списка
    list1.pop()
    show_list(list1, "\npop: Удален последний элемент  из list1 : ")

    # удаление элемента с заданным индексом
    list1.pop(1)
    show_list(list1, "\npop(1): Удален элемент с индексом 1 из list1 : ")

    # очистка  массива - удалить все элементы
    list1.clear()
    show_list(list1, "\nclear(): Удалены все элементы из list1 : ")

    #########################################################################

    # Копирование части списка - срезы
    # Если необходимо скопировать не весь список, а только его какую-то определенную
    # часть, применяется специальный синтаксис:
    #
    # list[:end]           - копируем элементы с индексами от 0 до end
    #
    # list[start:end]      - копируем элементы с индексами от start до end
    #
    # list[start:end:step] - копируем элементы с индексами от 0 до end с шагом step
    #                        по умолчанию шаг равен 1

    print('\nСрезы списка')

    print(list3[:4])                # первые 4 элемента
    print(list3[2:len(list3)])      # от 2го до последнего элемента
    print(list3[1:5:2])             # от 1го до 5го с шагом 2
    print(list3[6:2:-1])            # от 6го до 2го с шагом -1

    #########################################################################


    show_list(list2, "\n\nlist2 - исходный порядок: ")
    list2.reverse()
    show_list(list2, "list2 - обратный порядок: ")

    list2.sort()
    show_list(list2, "list2 - по возрастанию: ")

    fill_list(list2, -100, 100)
    show_list(list2, "\nlist2 - новые данные : ")
    list2.sort()
    list2.reverse()
    show_list(list2, "list2 - по убыванию: ")

    list4 = [-3, 5, -1, 12,-4, 5, -6, 0, -2]
    list4 = sorted(list4)
    print(f'\nупорядоченный список list4: {list4}')

    ############################################################################

    # использование функций для обработки списка
    fill_list(list3, -100, 100)
    show_list(list3, "\n\nlist3 - исходный порядок: ")

    # поиск минимального и максимального значений в списке
    min_list3 = min(list3)
    max_list3 = max(list3)
    sum_list = sum(list3)
    print(f'Минимальное значение в list3: {min_list3}, максимальное значение в list3: {max_list3}, сумма {sum_list}')

    # проверка наличия элемента в списке
    list3 = [1, 2, 3, 10, 10, 10, 8, 4, 5, 6, 6, 7, 8, 8, 9, 10]
    show_list(list3, "\nlist3 - новые значения  : ")

    key = int(input('\nЧто искать: '))
    if key in list3:
        n = list3.count(key)
        print(f"нашли, всего элементов в списке {n}")
    else:
        print("не нашли")

    ######################################################################
    # списки списков
    print('\n-----------------------------------------------------------\n')
    users = [
        ["Тимофей", 29],
        ["Алиса", 33],
        ["Борис", 27]
    ]

    # выводим этот список списков
    for user in users:
        row = ''
        for item in user:
            row += str(item) + ' '
        print(row)

    ######################################################################
    # списки кортежей
    print('\n-----------------------------------------------------------\n')
    users = [
        ("Тимофей", 29),
        ("Алиса", 33),
        ("Борис", 27)
    ]

    # выводим этот список списков
    for user in users:
        row = ''
        for item in user:
            row += f'\t{item}'
        print(row)

# end demo_lists
