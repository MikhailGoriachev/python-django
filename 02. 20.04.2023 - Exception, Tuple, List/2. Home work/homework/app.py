import tasks.task01 as task01
import tasks.task02 as task02


# Task1. Обработка кортежей. Описать функцию rect_ps(x1, y1, x2, y2), вычисляющую периметр и площадь прямоугольника 
# со сторонами, параллельными осям координат, по координатам (x1, y1), (x2, y2) его противоположных вершин (стороны 
# вычисляются как a = abs(x2 - x1), b = abs(y2 – y1)). Функция возвращает кортеж с периметром и площадью. С помощью 
# этой функции найти периметры и площади трех прямоугольников с данными противоположными вершинами.
def task01_run():
    amount = 3

    rectangles = []

    for i in range(amount):
        x1, y1, x2, y2 = task01.create_rect()
        perimeter, area = task01.react_ps(x1, y1, x2, y2)

        rectangles.append((x1, y1, x2, y2, perimeter, area))

    task01.show_table(rectangles)


# Task2. Обработка списков. Для списков, заполненных случайными числами в диапазоне значений от –20 до 20, выводите 
# сформированные списки до и после обработки по заданию.
# o	Сформируйте список list_c. Увеличить все нечетные числа, содержащиеся в списке, на исходное значение последнего 
# нечетного числа. Если нечетные числа в списке отсутствуют, то оставить список без изменений. Вывести упорядоченную 
# по убыванию копию списка
#   —	Сформируйте список list_c. Возвести в квадрат все его локальные минимумы (то есть числа, меньшие своих соседей)
#   —	Сформируйте список list_c. Удалить из списка все одинаковые элементы, оставив их первые вхождения
#   —	Сформируйте список list_c. Вставить элемент с нулевым значением перед минимальным и после максимального 
#     элемента списка
def task02_run():
    task02.proc01()
    task02.proc02()
    task02.proc03()
    task02.proc04()


if __name__ == "__main__":
    from main import main

    main()
