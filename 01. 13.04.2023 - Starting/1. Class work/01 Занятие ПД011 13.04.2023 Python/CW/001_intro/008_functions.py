# Функции
# Синтаксис определения функции
#
# def имя_функции(список_параметров_функции):
#     оператор1
#     оператор2
#     ...
#     операторN


def say_hello():
    print('Привет, мир!')


# вызов функции - возможен только после определения
say_hello()
print()


for i in range(1, 11):
    say_hello()


# функция с параметрами
# message - выводимый текст
# color   - цвет выводимого текста
# это параметры имеют значения по умолчанию
def say_message(message="Текст для вывода в цвете, значение по умолчанию", color='7'):
    print(f'\033[9{color}m{message}\033[0m')


print('------------------------------------------------')
say_message()
print('------------------------------------------------')

print('\n')
# !!! Цвет с кодом 7 - это белый, т.е. крайняя строка невидимая...
for color in range(0, 8):
    say_message("Прекрасный весенний снег", f'{color}')

print('\n')
# !!! Цвет с кодом 7 - это белый, т.е. крайняя строка невидимая...
for foreColor in range(0, 8):
    # передача параметров по имени - порядок следования параметров произвольный
    # ВСЕ параметры должны передаваться по имени
    say_message(color=f'{foreColor}', message="Это еще одна строка")

print('\n')
# !!! Цвет с кодом 7 - это белый, т.е. крайняя строка невидимая...
for foreColor in range(0, 8):
    # передача параметров: message не указываем, т.к. устраивает значение по умолчанию
    # color передаем по имени
    say_message(color=f'{foreColor}')
