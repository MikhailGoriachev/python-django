# Функция, возвращающая значение при помощи оператора return

# глобальная переменная - рекомендуется только для констант
c = 5


def add(a, b):
    # переменная c локальная для функции add() и недоступна
    # вне этой функции
    c = a + b
    return c
# end add


def sub(a, b):
    # переменная c локальная для функции sub() и недоступна
    # вне этой функции, никакого конфликта с функцией add()
    # нет

    # пример использования одноименной глобальной переменной
    # !!! не делайте так !!!
    # global c
    # print(f'sub: глобальная c = {c} до изменения')

    c = a - b  # локальная переменная перекрывает одноименную глобальную
               # т.е. одноименная глобальная переменная недоступна
    #print(f'sub: глобальная c = {c} после изменения')
    return c
# end sub


# чтение глобальной переменной - безопасно
def bar():
    print(f'bar: c = {c}')
# end bar


# ++ --- +++ ---- ++++ выполнение функций
print(f'c = {c}')
x = 3
y = 5
z1 = add(x, y)
z2 = sub(x, y)
bar()

print(f'{x} + {y} = {z1}\n{x} - {y} = {z2}')
print(f'c = {c}')
